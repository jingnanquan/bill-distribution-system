{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/offer/%E9%83%A8%E7%BD%B2/bill-distribution-system-main/app/manager/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSession, signOut } from 'next-auth/react';\r\n\r\nconst TASKS = ['翻译', '质检', '后期', '审核'] as const;\r\ntype TaskName = (typeof TASKS)[number];\r\nconst today = new Date().toISOString().split('T')[0];\r\n\r\n/* -------------------------------------------------- */\r\n/* 颜色映射                                            */\r\n/* -------------------------------------------------- */\r\nconst statusColor = (s: string) => {\r\n  switch (s) {\r\n    case '请重新分配任务':\r\n    case '超时未完成':\r\n      return 'text-red-600';\r\n    case '待验收':\r\n      return 'text-green-600';\r\n    case '分配中':\r\n      return 'text-blue-600';\r\n    case '进行中':\r\n      return 'text-yellow-600';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nexport default function ManagerPage() {\r\n  const { data: session, status } = useSession();\r\n\r\n  /* ---------------- 状态 ---------------- */\r\n  const [projects, setProjects] = useState<any[]>([]);\r\n  const [members,  setMembers]  = useState<any[]>([]);\r\n  const [err,      setErr]      = useState(false);\r\n  const [search,   setSearch]   = useState('');\r\n  const [expanded, setExpanded] = useState<number | null>(null);\r\n\r\n  /* ---- 新建项目 ---- */\r\n  const [formVisible, setFormVisible] = useState(false);\r\n  const [newProject, setNewProject] = useState({\r\n    title: '',\r\n    episode: '',\r\n    language: '日语',\r\n    minutes: 0,\r\n    deadline: today,\r\n    assignments: TASKS.reduce(\r\n      (acc, t) => ({ ...acc, [t]: '' }),\r\n      {} as Record<TaskName, string>\r\n    ),\r\n  });\r\n  const [assignTexts, setAssignTexts] = useState<Record<TaskName, string>>({\r\n    翻译: '', 质检: '', 后期: '', 审核: '',\r\n  });\r\n  const [eligible, setEligible] = useState<Record<TaskName, any[]>>({\r\n    翻译: [], 质检: [], 后期: [], 审核: [],\r\n  });\r\n\r\n  /* ---------------- fetch helpers ---------------- */\r\n  const fetchMembers = async () => {\r\n    const res  = await fetch(`/api/admin/users?name=${encodeURIComponent(search)}`);\r\n    const data = await res.json();\r\n    setMembers(data.members);\r\n  };\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const res = await fetch('/api/manager/projects');\r\n      if (!res.ok) throw new Error();\r\n      const data = await res.json();\r\n      setProjects(Array.isArray(data) ? data : []);\r\n      setErr(false);\r\n    } catch {\r\n      setProjects([]);\r\n      setErr(true);\r\n    }\r\n  };\r\n\r\n  async function searchEligible(task: TaskName, keyword = '') {\r\n    const url =\r\n      `/api/manager/projects?language=${encodeURIComponent(newProject.language)}` +\r\n      `&task=${encodeURIComponent(task)}&keyword=${encodeURIComponent(keyword)}`;\r\n    const res  = await fetch(url);\r\n    const data = await res.json();\r\n    setEligible(prev => ({ ...prev, [task]: data.members ?? [] }));\r\n  }\r\n\r\n  /* ---------------- 首次加载 ---------------- */\r\n  useEffect(() => {\r\n    if (session?.user?.role === 'manager') {\r\n      fetchMembers();\r\n      fetchProjects();\r\n      TASKS.forEach(t => searchEligible(t));\r\n    }\r\n  }, [session]);\r\n\r\n  useEffect(() => {\r\n    TASKS.forEach(t => searchEligible(t));\r\n  }, [newProject.language]);\r\n\r\n  /* ---------------- 新建项目提交 ---------------- */\r\n  const handleCreateProject = async () => {\r\n    try {\r\n      const res = await fetch('/api/manager/projects', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newProject),\r\n      });\r\n      if (!res.ok) throw new Error();\r\n      setFormVisible(false);\r\n      setNewProject({\r\n        title: '',\r\n        episode: '',\r\n        language: '日语',\r\n        minutes: 0,\r\n        deadline: today,\r\n        assignments: TASKS.reduce(\r\n          (acc, t) => ({ ...acc, [t]: '' }),\r\n          {} as Record<TaskName, string>\r\n        ),\r\n      });\r\n      fetchProjects();\r\n    } catch {\r\n      alert('创建失败，请检查字段！');\r\n    }\r\n  };\r\n\r\n  /* ---------------- 项目验收 ---------------- */\r\n  const handleAcceptProject = async (id: number) => {\r\n    const ok = confirm('确认项目所有任务正确完成并验收？');\r\n    if (!ok) return;\r\n    const res = await fetch('/api/manager/projects', {\r\n      method: 'PATCH',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ projectId: id }),\r\n    });\r\n    if (res.ok) {\r\n      fetchProjects();\r\n    } else {\r\n      alert('验收失败！');\r\n    }\r\n  };\r\n\r\n  /* ---------------- 视图数据分组 ---------------- */\r\n  const pendingProjects   = projects.filter(p => p.accepted === 0);\r\n  const completedProjects = projects.filter(p => p.accepted === 1);\r\n\r\n  /* ---------------- UI ---------------- */\r\n  if (status === 'loading') return <div>加载中...</div>;\r\n  if (!session || session.user.role !== 'manager') return <div>无访问权限</div>;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      {/* 顶部栏 --------------------------------------------------------- */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div>\r\n          当前登录：<strong>{session.user.name}</strong>（项目经理）\r\n        </div>\r\n        <button\r\n          className=\"bg-red-500 text-white px-4 py-2 rounded\"\r\n          onClick={() => signOut({ callbackUrl: '/login' })}\r\n        >\r\n          退出登录\r\n        </button>\r\n      </div>\r\n\r\n      {/* ===== 接单员管理 ===== */}\r\n      <h2 className=\"text-xl font-bold mb-2\">接单员管理</h2>\r\n      <div className=\"flex gap-2 mb-4\">\r\n        <input\r\n          placeholder=\"搜索姓名\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n          className=\"border px-2 py-1\"\r\n        />\r\n        <button\r\n          className=\"bg-gray-600 text-white px-4 py-1 rounded\"\r\n          onClick={fetchMembers}\r\n        >\r\n          搜索\r\n        </button>\r\n      </div>\r\n\r\n      <table className=\"table-auto w-full border-collapse border mb-8\">\r\n        <thead>\r\n          <tr className=\"bg-gray-100\">\r\n            <th className=\"border px-2\">用户名</th>\r\n            <th className=\"border px-2\">姓名</th>\r\n            <th className=\"border px-2\">状态</th>\r\n            <th className=\"border px-2\">操作</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {members.map(m => (\r\n            <tr key={m.id} className={m.status === 'frozen' ? 'text-gray-400' : ''}>\r\n              <td className=\"border px-2\">{m.username}</td>\r\n              <td className=\"border px-2\">{m.name}</td>\r\n              <td className=\"border px-2\">{m.status}</td>\r\n              <td className=\"border px-2\">\r\n                <button\r\n                  className=\"bg-yellow-500 text-white px-2 py-1 rounded\"\r\n                  onClick={() => toggleStatus(m.id, m.status)}\r\n                >\r\n                  切换状态\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* ===== 待完成的项目 ===== */}\r\n      <h2 className=\"text-xl font-bold mb-2\">待完成的项目</h2>\r\n      {err ? (\r\n        <div className=\"text-red-600 mb-4\">⚠️ 加载项目失败，可能无权限或服务器异常</div>\r\n      ) : pendingProjects.length === 0 ? (\r\n        <div className=\"text-gray-500 mb-8\">暂无待完成项目</div>\r\n      ) : (\r\n        <table className=\"table-auto w-full border-collapse border mb-8\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"border px-2\">名称</th>\r\n              <th className=\"border px-2\">集数</th>\r\n              <th className=\"border px-2\">语言</th>\r\n              <th className=\"border px-2\">分钟数</th>\r\n              <th className=\"border px-2\">截止日期</th>\r\n              <th className=\"border px-2\">状态</th>\r\n              <th className=\"border px-2\">操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pendingProjects.map(p => (\r\n              <React.Fragment key={p.id}>\r\n                <tr>\r\n                  <td className=\"border px-2\">{p.title}</td>\r\n                  <td className=\"border px-2\">{p.episode}</td>\r\n                  <td className=\"border px-2\">{p.language}</td>\r\n                  <td className=\"border px-2\">{p.minutes}</td>\r\n                  <td className=\"border px-2\">{p.deadline}</td>\r\n                  <td className=\"border px-2 font-semibold\">\r\n                    <span className={statusColor(p.projectStatus)}>\r\n                      {p.projectStatus}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"border px-2\">\r\n                    <button\r\n                      className=\"bg-blue-500 text-white px-2 py-1 rounded\"\r\n                      onClick={() => setExpanded(expanded === p.id ? null : p.id)}\r\n                    >\r\n                      {expanded === p.id ? '收起' : '展开'}\r\n                    </button>\r\n                    {p.projectStatus === '待验收' && (\r\n                      <button\r\n                        className=\"bg-green-600 text-white px-2 py-1 rounded ml-2\"\r\n                        onClick={() => handleAcceptProject(p.id)}\r\n                      >\r\n                        验收\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                {expanded === p.id && (\r\n                  <tr>\r\n                    <td colSpan={7} className=\"border px-2 bg-gray-50\">\r\n                      {p.assignments.map((a: any) => (\r\n                        <div key={a.id} className=\"text-sm mb-1\">\r\n                          <strong>{a.role}</strong>：{a.member_name}，\r\n                          状态 {a.status}，\r\n                          完成时间 {a.completed_time || '未完成'}\r\n                        </div>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      {/* ===== 已完成的项目 ===== */}\r\n      <h2 className=\"text-xl font-bold mb-2\">已完成的项目</h2>\r\n      {completedProjects.length === 0 ? (\r\n        <div className=\"text-gray-500 mb-8\">暂无已完成项目</div>\r\n      ) : (\r\n        <table className=\"table-auto w-full border-collapse border mb-8\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"border px-2\">名称</th>\r\n              <th className=\"border px-2\">集数</th>\r\n              <th className=\"border px-2\">语言</th>\r\n              <th className=\"border px-2\">分钟数</th>\r\n              <th className=\"border px-2\">截止日期</th>\r\n              <th className=\"border px-2\">验收时间</th>\r\n              <th className=\"border px-2\">操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {completedProjects.map(p => (\r\n              <React.Fragment key={p.id}>\r\n                <tr>\r\n                  <td className=\"border px-2\">{p.title}</td>\r\n                  <td className=\"border px-2\">{p.episode}</td>\r\n                  <td className=\"border px-2\">{p.language}</td>\r\n                  <td className=\"border px-2\">{p.minutes}</td>\r\n                  <td className=\"border px-2\">{p.deadline}</td>\r\n                  <td className=\"border px-2\">\r\n                    {/* 简化：用 accepted=1 的当天日期代替真正验收时间 */}\r\n                    {new Date(p.accepted_time || Date.now())\r\n                      .toISOString()\r\n                      .split('T')[0]}\r\n                  </td>\r\n                  <td className=\"border px-2\">\r\n                    <button\r\n                      className=\"bg-blue-500 text-white px-2 py-1 rounded\"\r\n                      onClick={() => setExpanded(expanded === p.id ? null : p.id)}\r\n                    >\r\n                      {expanded === p.id ? '收起' : '展开'}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                {expanded === p.id && (\r\n                  <tr>\r\n                    <td colSpan={7} className=\"border px-2 bg-gray-50\">\r\n                      {p.assignments.map((a: any) => (\r\n                        <div key={a.id} className=\"text-sm mb-1\">\r\n                          <strong>{a.role}</strong>：{a.member_name}，\r\n                          状态 {a.status}，\r\n                          完成时间 {a.completed_time || '未完成'}\r\n                        </div>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      {/* ===== 新建项目 ===== */}\r\n      <div className=\"flex items-center mb-2\">\r\n        <h2 className=\"text-xl font-bold mr-4\">新建项目</h2>\r\n        <button\r\n          className=\"bg-blue-600 text-white px-3 py-1 rounded\"\r\n          onClick={() => setFormVisible(v => !v)}\r\n        >\r\n          {formVisible ? '收起' : '展开'}\r\n        </button>\r\n      </div>\r\n\r\n      {formVisible && (\r\n        <>\r\n          {/* 基本信息 ----------------------------------------------------- */}\r\n          <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n            <input\r\n              placeholder=\"项目名称\"\r\n              value={newProject.title}\r\n              className=\"border px-2 py-1\"\r\n              onChange={e => setNewProject({ ...newProject, title: e.target.value })}\r\n            />\r\n            <input\r\n              placeholder=\"集数\"\r\n              value={newProject.episode}\r\n              className=\"border px-2 py-1\"\r\n              onChange={e => setNewProject({ ...newProject, episode: e.target.value })}\r\n            />\r\n            <select\r\n              className=\"border px-2 py-1\"\r\n              value={newProject.language}\r\n              onChange={e => setNewProject({ ...newProject, language: e.target.value })}\r\n            >\r\n              <option value=\"日语\">日语</option>\r\n              <option value=\"英语\">英语</option>\r\n              <option value=\"韩语\">韩语</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"分钟数\"\r\n              value={newProject.minutes || ''}\r\n              className=\"border px-2 py-1\"\r\n              onChange={e =>\r\n                setNewProject({ ...newProject, minutes: Number(e.target.value) })\r\n              }\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              value={newProject.deadline}\r\n              className=\"border px-2 py-1\"\r\n              onChange={e =>\r\n                setNewProject({ ...newProject, deadline: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          {/* 任务分配 ----------------------------------------------------- */}\r\n          <h3 className=\"font-bold\">任务分配</h3>\r\n          {TASKS.map(task => (\r\n            <div key={task} className=\"mb-2 flex items-center\">\r\n              <span className=\"w-16\">{task}：</span>\r\n              <input\r\n                list={`${task}-list`}\r\n                className=\"border px-2 py-1 flex-1\"\r\n                placeholder=\"输入姓名或用户名\"\r\n                value={assignTexts[task]}\r\n                onChange={async e => {\r\n                  const text = e.target.value;\r\n                  setAssignTexts({ ...assignTexts, [task]: text });\r\n                  await searchEligible(task, text);\r\n                  const hit = eligible[task].find(\r\n                    (m) =>\r\n                      text === `${m.name}（${m.username}）` ||\r\n                      text === m.username ||\r\n                      text === m.name,\r\n                  );\r\n                  setNewProject(p => ({\r\n                    ...p,\r\n                    assignments: { ...p.assignments, [task]: hit ? String(hit.id) : '' },\r\n                  }));\r\n                }}\r\n                onBlur={e => {\r\n                  const text = e.target.value.trim();\r\n                  if (newProject.assignments[task]) {\r\n                    setAssignTexts(prev => ({ ...prev, [task]: text }));\r\n                    return;\r\n                  }\r\n                  const hit = eligible[task].find(\r\n                    (m) =>\r\n                      text === `${m.name}（${m.username}）` ||\r\n                      text === m.username ||\r\n                      text === m.name,\r\n                  );\r\n                  if (hit) {\r\n                    setAssignTexts(prev => ({ ...prev, [task]: text }));\r\n                    setNewProject(p => ({\r\n                      ...p,\r\n                      assignments: { ...p.assignments, [task]: String(hit.id) },\r\n                    }));\r\n                  } else {\r\n                    setAssignTexts(prev => ({ ...prev, [task]: '' }));\r\n                    setNewProject(p => ({\r\n                      ...p,\r\n                      assignments: { ...p.assignments, [task]: '' },\r\n                    }));\r\n                  }\r\n                }}\r\n              />\r\n              <datalist id={`${task}-list`}>\r\n                {eligible[task].map(m => (\r\n                  <option key={m.id} value={`${m.name}（${m.username}）`} />\r\n                ))}\r\n              </datalist>\r\n            </div>\r\n          ))}\r\n\r\n          <button\r\n            className=\"bg-green-600 text-white px-4 py-2 mt-4\"\r\n            onClick={handleCreateProject}\r\n          >\r\n            创建项目\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}