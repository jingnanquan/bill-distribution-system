{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///E:/offer/%E9%83%A8%E7%BD%B2/bill-distribution-system-main/lib/db.ts"],"sourcesContent":["import Database from 'better-sqlite3';\r\nimport path from 'path';\r\n\r\nconst dbPath = path.join(process.cwd(), 'data', 'bill_system.db');\r\nconst db = new Database(dbPath);\r\n\r\nexport default db;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAChD,MAAM,KAAK,IAAI,2HAAA,CAAA,UAAQ,CAAC;uCAET","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///E:/offer/%E9%83%A8%E7%BD%B2/bill-distribution-system-main/lib/auth.ts"],"sourcesContent":["// lib/auth.ts\r\nimport CredentialsProvider from 'next-auth/providers/credentials';\r\nimport type { NextAuthOptions } from 'next-auth';\r\nimport db from './db';\r\n\r\nexport const authOptions: NextAuthOptions = {\r\n  session: { strategy: 'jwt' },\r\n  secret: process.env.NEXTAUTH_SECRET ?? 'devsecret',\r\n\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: 'Credentials',\r\n      credentials: {\r\n        username: { label: '用户名', type: 'text' },\r\n        password: { label: '密码', type: 'password' },\r\n      },\r\n      async authorize(credentials) {\r\n        if (!credentials) return null;\r\n        const { username, password } = credentials;\r\n\r\n        const admin = db\r\n          .prepare(\r\n            `SELECT * FROM admin_users WHERE username = ? AND password = ?`,\r\n          )\r\n          .get(username, password);\r\n        if (admin)\r\n          return { id: admin.id, name: admin.name, role: 'admin' } as any;\r\n\r\n        const manager = db\r\n          .prepare(\r\n            `SELECT * FROM manager_users WHERE username = ? AND password = ?`,\r\n          )\r\n          .get(username, password);\r\n        if (manager)\r\n          return { id: manager.id, name: manager.name, role: 'manager' } as any;\r\n\r\n        const member = db\r\n          .prepare(\r\n            `SELECT * FROM member_users WHERE username = ? AND password = ?`,\r\n          )\r\n          .get(username, password);\r\n        if (member)\r\n          return { id: member.id, name: member.name, role: 'member' } as any;\r\n\r\n        return null;\r\n      },\r\n    }),\r\n  ],\r\n\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.role = (user as any).role;\r\n        token.name = user.name;\r\n      }\r\n      return token;\r\n    },\r\n\r\n    async session({ session, token }) {\r\n      if (session.user) {\r\n        session.user.id = token.sub ? Number(token.sub) : undefined;\r\n        session.user.role = token.role as string;\r\n        session.user.name = token.name as string;\r\n      }\r\n      return session;\r\n    },\r\n  },\r\n\r\n  pages: { signIn: '/login' },\r\n};\r\n"],"names":[],"mappings":"AAAA,cAAc;;;;AACd;AAEA;;;AAEO,MAAM,cAA+B;IAC1C,SAAS;QAAE,UAAU;IAAM;IAC3B,QAAQ,QAAQ,GAAG,CAAC,eAAe,IAAI;IAEvC,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAO,MAAM;gBAAO;gBACvC,UAAU;oBAAE,OAAO;oBAAM,MAAM;gBAAW;YAC5C;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,OAAO;gBACzB,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;gBAE/B,MAAM,QAAQ,2GAAA,CAAA,UAAE,CACb,OAAO,CACN,CAAC,6DAA6D,CAAC,EAEhE,GAAG,CAAC,UAAU;gBACjB,IAAI,OACF,OAAO;oBAAE,IAAI,MAAM,EAAE;oBAAE,MAAM,MAAM,IAAI;oBAAE,MAAM;gBAAQ;gBAEzD,MAAM,UAAU,2GAAA,CAAA,UAAE,CACf,OAAO,CACN,CAAC,+DAA+D,CAAC,EAElE,GAAG,CAAC,UAAU;gBACjB,IAAI,SACF,OAAO;oBAAE,IAAI,QAAQ,EAAE;oBAAE,MAAM,QAAQ,IAAI;oBAAE,MAAM;gBAAU;gBAE/D,MAAM,SAAS,2GAAA,CAAA,UAAE,CACd,OAAO,CACN,CAAC,8DAA8D,CAAC,EAEjE,GAAG,CAAC,UAAU;gBACjB,IAAI,QACF,OAAO;oBAAE,IAAI,OAAO,EAAE;oBAAE,MAAM,OAAO,IAAI;oBAAE,MAAM;gBAAS;gBAE5D,OAAO;YACT;QACF;KACD;IAED,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,IAAI,GAAG,AAAC,KAAa,IAAI;gBAC/B,MAAM,IAAI,GAAG,KAAK,IAAI;YACxB;YACA,OAAO;QACT;QAEA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,QAAQ,IAAI,EAAE;gBAChB,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,GAAG,OAAO,MAAM,GAAG,IAAI;gBAClD,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;gBAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAChC;YACA,OAAO;QACT;IACF;IAEA,OAAO;QAAE,QAAQ;IAAS;AAC5B","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///E:/offer/%E9%83%A8%E7%BD%B2/bill-distribution-system-main/app/api/manager/projects/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { getServerSession } from 'next-auth';\r\nimport { getToken } from 'next-auth/jwt';\r\nimport { authOptions } from '@/lib/auth';\r\nimport db from '@/lib/db';\r\n\r\n/* ------------------------------------------------------------------ */\r\n/* 统一取当前登录项目经理 ID                                            */\r\n/* ------------------------------------------------------------------ */\r\nconst secret = process.env.NEXTAUTH_SECRET;\r\n\r\nasync function getManagerId(req: NextRequest): Promise<number | undefined> {\r\n  const session = await getServerSession(authOptions);\r\n  if (session?.user?.role === 'manager' && session.user.id) return session.user.id;\r\n\r\n  const token = await getToken({ req, secret });\r\n  if (token?.role === 'manager' && token?.sub) return Number(token.sub);\r\n\r\n  return undefined;\r\n}\r\n\r\n/* ------------------------------------------------------------------ */\r\n/* 工具：根据任务分配 & 截止日期 计算项目状态                          */\r\n/* ------------------------------------------------------------------ */\r\nfunction calcStatus(assignments: any[], deadline: string): string {\r\n  const allPending   = assignments.every(a => a.status === 'pending');\r\n  const anyRejected  = assignments.some(a => a.status === 'rejected');\r\n  const allCompleted = assignments.every(a => a.status === 'completed');\r\n  const now          = new Date();\r\n  const end          = new Date(deadline);\r\n\r\n  if (allPending) return '分配中';\r\n  if (anyRejected) return '请重新分配任务';\r\n  if (allCompleted) return '待验收';\r\n  if (now > end)   return '超时未完成';\r\n  return '进行中';\r\n}\r\n\r\n/* ------------------------------------------------------------------ */\r\n/* GET                                                                */\r\n/* ------------------------------------------------------------------ */\r\nexport async function GET(req: NextRequest) {\r\n  const managerId = await getManagerId(req);\r\n  if (!managerId) return NextResponse.json({ error: '无权限' }, { status: 403 });\r\n\r\n  const { searchParams } = new URL(req.url);\r\n  const language = searchParams.get('language');\r\n  const task     = searchParams.get('task');\r\n  const keyword  = searchParams.get('keyword') ?? '';\r\n\r\n  /* ---- ① 项目经理挑选接单员 ---- */\r\n  if (language && task) {\r\n    const sql = `\r\n      SELECT DISTINCT u.id, u.username, u.name\r\n        FROM member_users  u\r\n        JOIN member_skills s ON s.member_id = u.id\r\n       WHERE u.status   = 'active'\r\n         AND s.language = ?\r\n         AND s.task     = ?\r\n         ${keyword ? 'AND (u.username LIKE ? OR u.name LIKE ?)' : ''}\r\n       ORDER BY u.name\r\n    `;\r\n    const params = keyword\r\n      ? [language, task, `%${keyword}%`, `%${keyword}%`]\r\n      : [language, task];\r\n\r\n    const members = db.prepare(sql).all(...params);\r\n    return NextResponse.json({ members });\r\n  }\r\n\r\n  /* ---- ② 返回经理全部项目 ---- */\r\n  const projects = db\r\n    .prepare(`SELECT * FROM projects WHERE manager_id = ? ORDER BY id DESC`)\r\n    .all(managerId);\r\n\r\n  const assignStmt = db.prepare(`\r\n    SELECT a.*,\r\n           u.name AS member_name\r\n      FROM project_assignments a\r\n      JOIN member_users      u ON u.id = a.member_id\r\n     WHERE a.project_id = ?\r\n     ORDER BY\r\n       CASE a.role\r\n         WHEN '翻译' THEN 1\r\n         WHEN '质检' THEN 2\r\n         WHEN '后期' THEN 3\r\n         WHEN '审核' THEN 4\r\n         ELSE 5\r\n       END\r\n  `);\r\n\r\n  for (const p of projects) {\r\n    p.assignments   = assignStmt.all(p.id);\r\n    p.projectStatus = calcStatus(p.assignments, p.deadline);\r\n  }\r\n\r\n  return NextResponse.json(projects);\r\n}\r\n\r\n/* ------------------------------------------------------------------ */\r\n/* POST：创建新项目                                                    */\r\n/* ------------------------------------------------------------------ */\r\nexport async function POST(req: NextRequest) {\r\n  const managerId = await getManagerId(req);\r\n  if (!managerId) return NextResponse.json({ error: '无权限' }, { status: 403 });\r\n\r\n  const {\r\n    title,\r\n    episode,\r\n    language,\r\n    minutes,\r\n    deadline,\r\n    assignments,\r\n  } = await req.json();\r\n\r\n  if (!title || !episode || !language || !minutes || !deadline || !assignments) {\r\n    return NextResponse.json({ error: '字段不完整' }, { status: 400 });\r\n  }\r\n\r\n  const result = db.prepare(\r\n    `INSERT INTO projects\r\n       (title, episode, language, minutes, deadline, manager_id, accepted)\r\n     VALUES (?, ?, ?, ?, ?, ?, 0)`\r\n  ).run(title, episode, language, minutes, deadline, managerId);\r\n\r\n  const projectId = result.lastInsertRowid as number;\r\n\r\n  const assignStmt = db.prepare(\r\n    `INSERT INTO project_assignments\r\n       (project_id, member_id, role, minutes, status, deadline)\r\n     VALUES (?, ?, ?, ?, ?, ?)`\r\n  );\r\n\r\n  for (const [role, memberId] of Object.entries(assignments)) {\r\n    assignStmt.run(projectId, Number(memberId), role, minutes, 'pending', deadline);\r\n  }\r\n\r\n  return NextResponse.json({ ok: true });\r\n}\r\n\r\n/* ------------------------------------------------------------------ */\r\n/* PATCH：经理在“待验收”时确认验收                                    */\r\n/* ------------------------------------------------------------------ */\r\nexport async function PATCH(req: NextRequest) {\r\n  const managerId = await getManagerId(req);\r\n  if (!managerId) return NextResponse.json({ error: '无权限' }, { status: 403 });\r\n\r\n  const { projectId } = await req.json();\r\n  if (!projectId) return NextResponse.json({ error: '缺少 projectId' }, { status: 400 });\r\n\r\n  const result = db\r\n    .prepare(`UPDATE projects\r\n                 SET accepted = 1\r\n               WHERE id = ? AND manager_id = ?`)\r\n    .run(projectId, managerId);\r\n\r\n  if (result.changes === 0)\r\n    return NextResponse.json({ error: '无此项目或无权限' }, { status: 400 });\r\n\r\n  return NextResponse.json({ ok: true });\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}