{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///E:/offer/%E9%83%A8%E7%BD%B2/bill-distribution-system-main/lib/db.ts"],"sourcesContent":["import Database from 'better-sqlite3';\r\nimport path from 'path';\r\n\r\nconst dbPath = path.join(process.cwd(), 'data', 'bill_system.db');\r\nconst db = new Database(dbPath);\r\n\r\nexport default db;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAChD,MAAM,KAAK,IAAI,2HAAA,CAAA,UAAQ,CAAC;uCAET","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///E:/offer/%E9%83%A8%E7%BD%B2/bill-distribution-system-main/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from 'next-auth';\r\nimport CredentialsProvider from 'next-auth/providers/credentials';\r\nimport db from '@/lib/db';\r\n\r\nconst authOptions = {\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: 'Credentials',\r\n      credentials: {\r\n        username: { label: '用户名', type: 'text' },\r\n        password: { label: '密码', type: 'password' },\r\n      },\r\n      async authorize(credentials) {\r\n        const { username, password } = credentials;\r\n\r\n        const admin = db.prepare(`SELECT * FROM admin_users WHERE username = ? AND password = ?`).get(username, password);\r\n        if (admin) return { id: admin.id, name: admin.name, role: 'admin' };\r\n\r\n        const manager = db.prepare(`SELECT * FROM manager_users WHERE username = ? AND password = ?`).get(username, password);\r\n        if (manager) return { id: manager.id, name: manager.name, role: 'manager' };\r\n\r\n        const member = db.prepare(`SELECT * FROM member_users WHERE username = ? AND password = ?`).get(username, password);\r\n        if (member) return { id: member.id, name: member.name, role: 'member' };\r\n\r\n        return null;\r\n      },\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async session({ session, token }) {\r\n      session.user.role = token.role;\r\n      return session;\r\n    },\r\n    async jwt({ token, user }) {\r\n      if (user) token.role = user.role;\r\n      return token;\r\n    },\r\n  },\r\n  pages: {\r\n    signIn: '/login',\r\n  },\r\n  secret: process.env.NEXTAUTH_SECRET || 'devsecret',\r\n};\r\n\r\nconst handler = NextAuth(authOptions);\r\n\r\nexport const GET = handler;\r\nexport const POST = handler;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,cAAc;IAClB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAO,MAAM;gBAAO;gBACvC,UAAU;oBAAE,OAAO;oBAAM,MAAM;gBAAW;YAC5C;YACA,MAAM,WAAU,WAAW;gBACzB,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;gBAE/B,MAAM,QAAQ,2GAAA,CAAA,UAAE,CAAC,OAAO,CAAC,CAAC,6DAA6D,CAAC,EAAE,GAAG,CAAC,UAAU;gBACxG,IAAI,OAAO,OAAO;oBAAE,IAAI,MAAM,EAAE;oBAAE,MAAM,MAAM,IAAI;oBAAE,MAAM;gBAAQ;gBAElE,MAAM,UAAU,2GAAA,CAAA,UAAE,CAAC,OAAO,CAAC,CAAC,+DAA+D,CAAC,EAAE,GAAG,CAAC,UAAU;gBAC5G,IAAI,SAAS,OAAO;oBAAE,IAAI,QAAQ,EAAE;oBAAE,MAAM,QAAQ,IAAI;oBAAE,MAAM;gBAAU;gBAE1E,MAAM,SAAS,2GAAA,CAAA,UAAE,CAAC,OAAO,CAAC,CAAC,8DAA8D,CAAC,EAAE,GAAG,CAAC,UAAU;gBAC1G,IAAI,QAAQ,OAAO;oBAAE,IAAI,OAAO,EAAE;oBAAE,MAAM,OAAO,IAAI;oBAAE,MAAM;gBAAS;gBAEtE,OAAO;YACT;QACF;KACD;IACD,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAC9B,OAAO;QACT;QACA,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM,MAAM,IAAI,GAAG,KAAK,IAAI;YAChC,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe,IAAI;AACzC;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;AAElB,MAAM,MAAM;AACZ,MAAM,OAAO","debugId":null}}]
}