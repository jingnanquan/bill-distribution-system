{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///E:/offer/%E9%83%A8%E7%BD%B2/bill-distribution-system-main/lib/db.ts"],"sourcesContent":["import Database from 'better-sqlite3';\r\nimport path from 'path';\r\n\r\nconst dbPath = path.join(process.cwd(), 'data', 'bill_system.db');\r\nconst db = new Database(dbPath);\r\n\r\nexport default db;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAChD,MAAM,KAAK,IAAI,2HAAA,CAAA,UAAQ,CAAC;uCAET","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///E:/offer/%E9%83%A8%E7%BD%B2/bill-distribution-system-main/app/api/admin/users/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport db from '@/lib/db';\r\n\r\n/* ------------------------------------------------------------------ *\r\n * GET                                                                *\r\n *   A. /api/admin/users?name=张三            -> managers + members    *\r\n *      （仍兼容 ?keyword=张三）                                      *\r\n *                                                                    *\r\n *   B. /api/admin/users?memberId=123         -> skills for member     *\r\n * ------------------------------------------------------------------ */\r\nexport async function GET(req: NextRequest) {\r\n  const { searchParams } = new URL(req.url);\r\n  const memberId = searchParams.get('memberId');\r\n\r\n  /* ---------- B. 查询指定接单员的技能 ---------- */\r\n  if (memberId) {\r\n    const skills = db\r\n      .prepare(\r\n        `SELECT id, language, task, price, rating\r\n           FROM member_skills\r\n          WHERE member_id = ?`,\r\n      )\r\n      .all(Number(memberId));\r\n\r\n    return NextResponse.json({ skills });\r\n  }\r\n\r\n  /* ---------- A. 查询（项目经理 + 接单员）列表 ---------- */\r\n  /* 前端已改为传 name；为兼容旧调用，仍接受 keyword */\r\n  const nameParam = searchParams.get('name') ?? searchParams.get('keyword') ?? '';\r\n  const where     = nameParam ? `WHERE name LIKE ?` : '';\r\n  const value     = nameParam ? [`%${nameParam}%`] : [];\r\n\r\n  const managers = db\r\n    .prepare(\r\n      `SELECT id, username, name, phone, email, status\r\n         FROM manager_users ${where}`,\r\n    )\r\n    .all(...value);\r\n\r\n  const members = db\r\n    .prepare(\r\n      `SELECT id, username, name, phone, email, status\r\n         FROM member_users ${where}`,\r\n    )\r\n    .all(...value);\r\n\r\n  return NextResponse.json({ managers, members });\r\n}\r\n\r\n/* ------------------------------------------------------------------ *\r\n * PATCH：更新信息（含技能覆盖）                                       *\r\n * ------------------------------------------------------------------ */\r\nexport async function PATCH(req: NextRequest) {\r\n  const body   = await req.json();\r\n  const { id, role, skills = [], ...fields } = body;\r\n\r\n  /* --- 更新用户基本字段 -------------------------------------------- */\r\n  const table = role === 'manager' ? 'manager_users' : 'member_users';\r\n  const keys  = Object.keys(fields);\r\n\r\n  if (keys.length) {\r\n    const updates = keys.map((k) => `${k} = ?`).join(', ');\r\n    const values  = keys.map((k) => fields[k]);\r\n    db.prepare(`UPDATE ${table} SET ${updates} WHERE id = ?`).run(...values, id);\r\n  }\r\n\r\n  /* --- 如角色为 member 且附带 skills，则覆盖式重写 ------------------ */\r\n  if (role === 'member' && Array.isArray(skills)) {\r\n    db.prepare(`DELETE FROM member_skills WHERE member_id = ?`).run(id);\r\n\r\n    if (skills.length) {\r\n      const insertSkill = db.prepare(\r\n        `INSERT INTO member_skills\r\n           (member_id, language, task, price, rating)\r\n         VALUES (?, ?, ?, ?, ?)`,\r\n      );\r\n      const tx = db.transaction((rows) => {\r\n        rows.forEach((s: any) =>\r\n          insertSkill.run(id, s.language, s.task, s.price, s.rating),\r\n        );\r\n      });\r\n      tx(skills);\r\n    }\r\n  }\r\n\r\n  return NextResponse.json({ ok: true });\r\n}\r\n\r\n/* ------------------------------------------------------------------ *\r\n * DELETE                                                             *\r\n * ------------------------------------------------------------------ */\r\nexport async function DELETE(req: NextRequest) {\r\n  const { id, role, adminPassword } = await req.json();\r\n\r\n  const admin = db\r\n    .prepare(`SELECT id FROM admin_users WHERE password = ?`)\r\n    .get(adminPassword);\r\n\r\n  if (!admin) {\r\n    return NextResponse.json({ error: '密码错误' }, { status: 401 });\r\n  }\r\n\r\n  const table = role === 'manager' ? 'manager_users' : 'member_users';\r\n  db.prepare(`DELETE FROM ${table} WHERE id = ?`).run(id);\r\n\r\n  return NextResponse.json({ ok: true });\r\n}\r\n\r\n/* ------------------------------------------------------------------ *\r\n * POST：创建用户（如原逻辑）                                          *\r\n * ------------------------------------------------------------------ */\r\nexport async function POST(req: NextRequest) {\r\n  const { role, user, skills } = await req.json();\r\n  const table = role === 'manager' ? 'manager_users' : 'member_users';\r\n\r\n  const result = db\r\n    .prepare(\r\n      `INSERT INTO ${table}\r\n         (username, password, name, phone, email, status)\r\n       VALUES (?, ?, ?, ?, ?, ?)`,\r\n    )\r\n    .run(\r\n      user.username,\r\n      user.password,\r\n      user.name,\r\n      user.phone,\r\n      user.email,\r\n      user.status || 'active',\r\n    );\r\n\r\n  /* 如创建的是接单员且附带技能，追加写入 */\r\n  if (role === 'member' && skills?.length) {\r\n    const memberId    = result.lastInsertRowid;\r\n    const insertSkill = db.prepare(\r\n      `INSERT INTO member_skills\r\n         (member_id, language, task, price, rating)\r\n       VALUES (?, ?, ?, ?, ?)`,\r\n    );\r\n\r\n    const tx = db.transaction((rows) => {\r\n      rows.forEach((s: any) =>\r\n        insertSkill.run(memberId, s.language, s.task, s.price, s.rating),\r\n      );\r\n    });\r\n    tx(skills);\r\n  }\r\n\r\n  return NextResponse.json({ ok: true });\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}